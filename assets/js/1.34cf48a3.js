(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{56:function(e,a,t){"use strict";t.r(a);var r=t(0),c=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"electron-打包应用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#electron-打包应用","aria-hidden":"true"}},[e._v("#")]),e._v(" Electron 打包应用")]),t("p",[e._v("使用 electron-builder 简化打包工作。")]),t("h2",{attrs:{id:"包含文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#包含文件","aria-hidden":"true"}},[e._v("#")]),e._v(" 包含文件")]),t("p",[e._v("electron-builder 默认会将项目目录下的文件都打包到目标文件中。不过有一些文件是我们不希望被打包的，比如我们把用来部署的一些凭证（如：OSS Bucket config）放在了目录下面。")]),t("p",[e._v("相关配置可以在官方文档中查看 "),t("code",[e._v("package.build.files[].filter")]),e._v("。")]),t("h2",{attrs:{id:"包含可执行程序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#包含可执行程序","aria-hidden":"true"}},[e._v("#")]),e._v(" 包含可执行程序")]),t("blockquote",[t("p",[e._v("Node中有一些可以执行程序的API，如child_process.exec，child_process.spawn和child_process.execFile等，但只有execFile可以执行asar包中的程序。\n因为exec和spawn允许command替代file作为输入，而command是需要在shell下执行的，目前没有可靠的方法来判断command中是否在操作一个asar包中的文件，而且即便可以判断，我们依旧无法保证可以在无任何副作用的情况下替换command中的文件路径。")])]),t("p",[e._v("如果内部包含可执行程序，并且无法确定其被调用的方式，那就需要将\b这些可执行程序从 asar 包中提取出来。")]),t("p",[e._v("在我们的应用中为了支持 Windows 系统的通知（自带的 Notification 模块在 Windows 上\b存在问题），使用了 "),t("code",[e._v("node-notifier")]),e._v(" 模块，该模块对于 Windows7 的气泡通知是使用 "),t("code",[e._v("notifu")]),e._v(" 等可执行程序。\b")]),t("p",[e._v("相关配置可以在官方文档中查看 "),t("code",[e._v("package.build.asarUnpack")]),e._v("。")]),t("h2",{attrs:{id:"自动更新"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自动更新","aria-hidden":"true"}},[e._v("#")]),e._v(" 自动更新")]),t("p",[e._v("前端开发在工程化正常实施的情况下，代码的及时更新和网络缓存优化都可以完美解决。")]),t("p",[e._v("但是客户端的情况有所不同，我们使用 electron-updater 来支持自动更新。\n因为我们使用阿里云 OSS，没在 electron-updater 的支持里面，无法做到自动发布，所以选择 "),t("code",[e._v("provider")]),e._v(" 为 "),t("code",[e._v("generic")]),e._v("，配合我们为前端代码部署缩写的部署工具进行发布部署。")]),t("p",[e._v("相关配置可以在官方文档中查看 "),t("code",[e._v("package.build.publish")]),e._v("。")]),t("h2",{attrs:{id:"代码签名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代码签名","aria-hidden":"true"}},[e._v("#")]),e._v(" 代码签名")]),t("p",[e._v("代码签名是为了安装使用过程中的用户友好，如果缺少有效的代码签名，用户安装过程困难重重。Mac 的安全策略会阻止打开，Windows 系统也会提示，360 等软件更可能认为有病毒。")]),t("p",[e._v("好在用 electron-builder 签名也很简单，Mac 上使用开发者账号即可，Windows 上我们是买 沃通 的证书，沃通 证书有一个问题是只有 U 盘版，密码需要手动输入，导致我们打包一个版本需要输入 10 次密码。所以最好购买可以导出为文件的证书。")])])}],!1,null,null,null);a.default=c.exports}}]);